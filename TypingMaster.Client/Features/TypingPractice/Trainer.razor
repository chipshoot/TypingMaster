<Card class="mt-3">
    <HeaderTemplate>
        <div class="d-flex justify-content-between align-items-center" style="width:100%">
            <div>
                Typing Trainer
            </div>
            <div class="d-flex">
                <div class="me-2">
                    <PracticeHistory StatsList="@StatsList"></PracticeHistory>
                </div>
                <div>
                    <Button Color="Color.Primary" OnClick="ResetPractice">RePractise</Button>
                </div>
            </div>
        </div>
    </HeaderTemplate>
    <BodyTemplate>
        <Practice Text="@_text" OnTypingCompleted="OnPracticeFinished" @ref="@_practice"></Practice>
    </BodyTemplate>
</Card>
@code {
    private TypingTrainer? _trainer;
    private string _text = string.Empty;
    private Practice? _practice;
    private Account? _account;
    private Lesson? _curLesson;

    private IList<TypingStats> StatsList
    {
        get { return _account?.Progress.Select(p => p.Stats).ToList() ?? new List<TypingStats>(); }
    }


    protected override void OnInitialized()
    {
        var courseService = new CourseService();
        var accountService = new AccountService(courseService);
        _account = accountService.GetAccount(1);
        _trainer = new TypingTrainer(_account);
        (_curLesson, _text) = _trainer.GetPracticeText();
    }

    private void OnPracticeFinished(TypingStats stats)
    {
        if (_curLesson != null && _account != null)
        {
            _trainer?.CheckPracticeResult(_account.CurrentCourse.Id, _curLesson.Id, stats);
        }

        if (_trainer != null)
        {
            (_curLesson, _text) = _trainer.GetPracticeText();
        }
        _practice?.HandleReset(_curLesson == null);
    }

    private void ResetPractice()
    {
        if (_account != null && _account.Progress.Any())
        {
            _practice?.HandleReset();
            (_curLesson, _text) = _trainer?.GetPracticeText() ?? (null, string.Empty);
            StateHasChanged();
        }
    }
}
