using TypingMaster.Core.Models;
using TypingMaster.Core.Models.Courses;
using TypingMaster.Core.Utility;

namespace TypingMaster.Client.Services
{
    public interface ITypingTrainer
    {
        Account? Account { get; }

        void SetupTrainer(Account account, CourseDto course);

        /// <summary>
        /// The function to do following processing:
        /// 1. Check the practice result and add the result to the practice log.
        /// 2. Convert the key event to key stats and add to the practice log.
        /// </summary>
        /// <param name="stats">The <see cref="DrillStats"/>generated by practice component for processing</param>
        void CheckPracticeResult(DrillStats stats);

        /// <summary>
        /// Save practice history to the database.
        /// 1. Calls CheckPracticeResult to update in-memory account data
        /// 2. Persists the updated account and drill stats to the database
        /// </summary>
        /// <param name="stats">The drill stats to save</param>
        /// <returns>True if save was successful, false otherwise</returns>
        Task<bool> SavePracticeHistoryAsync(DrillStats stats);

        void ConvertKeyEventToKeyStats(Queue<KeyEvent> keyEvents);

        ProcessResult ProcessResult { get; set; }
    }
}